{"ast":null,"code":"var _jsxFileName = \"/home/monky/Grp10LargeProject/Grp10LargeProject/frontend/src/components/RecoverPassword.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ACCESS_TOKEN_NAME } from \"../constants/apiConstants.js\";\nimport \"./Email.css\";\nimport { Redirect } from \"react-router\";\n\nfunction RecoverPassword(props) {\n  // local details\n  const [state, setState] = useState({\n    token: \"\",\n    password: \"\",\n    retypedPassword: \"\",\n    successMessage: null,\n    redirectMessage: null\n  });\n\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setState(prevState => ({ ...prevState,\n      [id]: value\n    }));\n  };\n\n  const handleSubmitClick = () => {\n    const payload = {\n      token: state.token,\n      newPassword: state.password\n    };\n\n    if (state.password != state.retypedPassword) {\n      setState(prevState => ({ ...prevState,\n        successMessage: \"Passwords do not match!\"\n      }));\n      return;\n    }\n\n    axios.post(\"https://letsbuckit.herokuapp.com/api/password-reset\", payload).then(function (response) {\n      if (response.status === 200) {\n        setState(prevState => ({ ...prevState,\n          redirectMessage: \"Password Reset Successfull\"\n        }));\n        console.log(state.successMessage);\n      } else if (response.code === 204) {\n        setState(prevState => ({ ...prevState,\n          successMessage: \"Invalid Token.\"\n        }));\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  if (state.successMessage != null) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: './login',\n        message: state.redirectMessage\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"registerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"link\", {\n    rel: \"preconnect\",\n    href: \"https://fonts.gstatic.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"link\", {\n    href: \"https://fonts.googleapis.com/css2?family=Montserrat:wght@700&display=swap\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"registerTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    class: \"formItem\",\n    id: \"token\",\n    type: \"text\",\n    placeholder: \"Email Token\",\n    value: state.emailToken,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    class: \"formItem\",\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"New Password\",\n    value: state.emailToken,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    class: \"formItem\",\n    id: \"retypedPassword\",\n    type: \"password\",\n    placeholder: \"Retype New Password\",\n    value: state.emailToken,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn registerButton\",\n    value: state.emailToken,\n    onClick: () => handleSubmitClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 1\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"links\",\n    style: {\n      color: '#7b0000'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 1\n    }\n  }, state.successMessage));\n}\n\nexport default RecoverPassword;","map":{"version":3,"sources":["/home/monky/Grp10LargeProject/Grp10LargeProject/frontend/src/components/RecoverPassword.js"],"names":["React","useEffect","useState","axios","ACCESS_TOKEN_NAME","Redirect","RecoverPassword","props","state","setState","token","password","retypedPassword","successMessage","redirectMessage","handleChange","e","id","value","target","prevState","handleSubmitClick","payload","newPassword","post","then","response","status","console","log","code","catch","error","pathname","message","emailToken","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ACCESS_TOKEN_NAME } from \"../constants/apiConstants.js\";\n\nimport \"./Email.css\";\nimport { Redirect } from \"react-router\";\n\nfunction RecoverPassword(props) {\n  // local details\n  const [state, setState] = useState({\n    token: \"\",\n    password: \"\",\n    retypedPassword: \"\",\n    successMessage: null,\n    redirectMessage: null,\n  });\n\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setState((prevState) => ({\n      ...prevState,\n      [id]: value,\n    }));\n  };\n\n  const handleSubmitClick = () => {\n    const payload = {\n      token:state.token,\n      newPassword:state.password\n    };\n\n    if(state.password != state.retypedPassword){\n      setState((prevState) => ({\n        ...prevState,\n        successMessage: \"Passwords do not match!\",\n      }))\n      return;\n    }\n    axios\n      .post(\"https://letsbuckit.herokuapp.com/api/password-reset\", payload)\n      .then(function (response) {\n        if (response.status === 200) {\n          setState((prevState) => ({\n            ...prevState,\n            redirectMessage: \"Password Reset Successfull\",\n          }))\n          console.log(state.successMessage);\n        } else if (response.code === 204) {\n          setState((prevState) => ({\n            ...prevState,\n            successMessage: \"Invalid Token.\",\n          }))\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n\n  if(state.successMessage != null){\n    return(<Redirect to={{pathname:'./login',message:state.redirectMessage}}/>)\n  }\n\n  return (\n    <div class=\"registerContainer\">\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\"></link>\n        <link href=\"https://fonts.googleapis.com/css2?family=Montserrat:wght@700&display=swap\" rel=\"stylesheet\"></link>\n  <div class=\"registerTitle\">Reset Password</div>\n  <input class=\"formItem\" id=\"token\" type=\"text\" placeholder=\"Email Token\" value={state.emailToken} onChange={handleChange}></input>\n<input class=\"formItem\" id=\"password\" type=\"password\" placeholder=\"New Password\" value={state.emailToken} onChange={handleChange}></input>\n<input class=\"formItem\" id=\"retypedPassword\" type=\"password\" placeholder=\"Retype New Password\" value={state.emailToken} onChange={handleChange}></input>\n<button type=\"button\" class=\"btn registerButton\" value={state.emailToken} onClick={ () =>handleSubmitClick()}>Reset Password</button>\n<div class=\"links\" style={{ color: '#7b0000' }}>{state.successMessage}</div>\n</div>\n  );\n}\n\nexport default RecoverPassword;\n"]},"metadata":{},"sourceType":"module"}