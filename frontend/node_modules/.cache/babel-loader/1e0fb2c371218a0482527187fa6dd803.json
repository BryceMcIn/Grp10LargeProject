{"ast":null,"code":"var _jsxFileName = \"/Users/ro-hannajowallah/Library/Mobile Documents/com~apple~CloudDocs/Grp10LargeProject /frontend/src/components/Friends.js\";\nimport React, { setState, useState, useEffect } from \"react\";\nimport \"./Popup.js\";\nimport \"./Friends.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CardActions, Container } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Popup from \"./Popup.js\";\nimport axios from \"axios\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 150,\n    margin: \"20px 20px 50px 20px\",\n    backgroundColor: \"#1E5F74\",\n    color: \"#FFFF\",\n    display: \"center\"\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 20px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 4\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nfunction Friends() {\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [friendReq, setFriend] = useState([]); //function to get the friends data\n\n  const getFriends = () => {\n    //get is getting every response by the endpoint\n    const payload = {\n      userID: localUserID\n    };\n    axios.post(\"https://letsbuckit.herokuapp.com/api/fr-allfriends\", payload).then(response => {\n      responseList = [];\n      var responseList = response.data.results;\n      console.log(responseList);\n      setFriend(responseList);\n    });\n  };\n\n  useEffect(() => {\n    getFriends();\n  }, []);\n\n  const jwt = require(\"jsonwebtoken\");\n\n  var storage = require(\"../tokenStorage.js\");\n\n  var tok = storage.retrieveToken();\n  var ud = jwt.decode(tok, {\n    json: true\n  });\n  var localUserID = ud.userID;\n  var firstName = ud.firstName;\n  var lastName = ud.lastName;\n  const classes = useStyles();\n  const bull = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.bullet,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }\n  }, \"\\u2022\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conatiner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: getFriends,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \" Get Data from API \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    class: \"form-control searchBar\",\n    placeholder: \"Search Friends...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, friendReq.map(item => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.title,\n      color: \"textSecondary\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, item)), /*#__PURE__*/React.createElement(CardActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, \"Delete\"))));\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: () => setButtonPopup(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Add new Friend\"), /*#__PURE__*/React.createElement(Popup, {\n    trigger: buttonPopup,\n    setTrigger: setButtonPopup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Friends;","map":{"version":3,"sources":["/Users/ro-hannajowallah/Library/Mobile Documents/com~apple~CloudDocs/Grp10LargeProject /frontend/src/components/Friends.js"],"names":["React","setState","useState","useEffect","Button","makeStyles","Card","CardContent","Typography","CardActions","Container","Grid","Popup","axios","useStyles","root","minWidth","margin","backgroundColor","color","display","bullet","transform","title","fontSize","pos","marginBottom","Friends","buttonPopup","setButtonPopup","friendReq","setFriend","getFriends","payload","userID","localUserID","post","then","response","responseList","data","results","console","log","jwt","require","storage","tok","retrieveToken","ud","decode","json","firstName","lastName","classes","bull","map","item"],"mappings":"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","sourcesContent":["import React, { setState, useState, useEffect } from \"react\";\nimport \"./Popup.js\";\nimport \"./Friends.css\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CardActions, Container } from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Popup from \"./Popup.js\";\nimport axios from \"axios\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 150,\n\n    margin: \"20px 20px 50px 20px\",\n    backgroundColor: \"#1E5F74\",\n    color: \"#FFFF\",\n    display: \"center\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 20px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 4,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nfunction Friends() {\n  const [buttonPopup, setButtonPopup] = useState(false);\n  const [friendReq, setFriend] = useState([]);\n  //function to get the friends data\n  const getFriends = () => {\n    //get is getting every response by the endpoint\n    const payload = { userID: localUserID };\n    axios\n      .post(\"https://letsbuckit.herokuapp.com/api/fr-allfriends\", payload)\n      .then((response) => {\n        responseList = [];\n        var responseList = response.data.results;\n        console.log(responseList);\n        setFriend(responseList);\n      });\n  };\n\n  useEffect(() => {\n    getFriends();\n  }, []);\n\n  const jwt = require(\"jsonwebtoken\");\n  var storage = require(\"../tokenStorage.js\");\n\n  var tok = storage.retrieveToken();\n  var ud = jwt.decode(tok, { json: true });\n\n  var localUserID = ud.userID;\n  var firstName = ud.firstName;\n  var lastName = ud.lastName;\n\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n  return (\n    <div className=\"conatiner\">\n      <button onClick={getFriends}> Get Data from API </button>\n\n      <input\n        type=\"text\"\n        class=\"form-control searchBar\"\n        placeholder=\"Search Friends...\"\n      ></input>\n      <Container>\n        <Grid container spacing={1}>\n          {friendReq.map((item) => {\n            return (\n              <Grid item={2}>\n                <Card className={classes.root}>\n                  <CardContent>\n                    <Typography\n                      className={classes.title}\n                      color=\"textSecondary\"\n                      gutterBottom\n                    ></Typography>\n                    <Typography variant=\"h5\" component=\"h2\"></Typography>\n                    <Typography variant=\"body2\" component=\"p\">\n                      {item}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <button className=\"delete\">Delete</button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            );\n          })}\n        </Grid>\n      </Container>\n\n      <button className=\"button\" onClick={() => setButtonPopup(true)}>\n        Add new Friend\n      </button>\n      <Popup trigger={buttonPopup} setTrigger={setButtonPopup}>\n        <h3></h3>\n      </Popup>\n    </div>\n  );\n}\n\nexport default Friends;\n"]},"metadata":{},"sourceType":"module"}