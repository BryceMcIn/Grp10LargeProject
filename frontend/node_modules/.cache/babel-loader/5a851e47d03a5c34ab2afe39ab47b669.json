{"ast":null,"code":"var _jsxFileName = \"/home/bryce/largeProjectVersions/current/Grp10LargeProject/frontend/src/components/Home/ListContainer.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckSquare, faMoneyBill, faTrash, faYenSign } from '@fortawesome/free-solid-svg-icons';\nimport { faSquare } from '@fortawesome/free-solid-svg-icons';\n\nfunction ListContainer(props) {\n  var listItemState = '';\n\n  if (props.state.currentState === 0) {\n    listItemState = \"Bucket List\";\n  } else {\n    listItemState = \"Todo List\";\n  }\n\n  if (props.state.currentListItems.length > 0) {\n    return props.state.currentListItems.map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"list-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        class: \"type\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }, listItemState), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"listTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, item.itemTitle), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"listBody\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }, item.caption), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"complete\",\n        onClick: async e => {\n          if (props.state.currentState == 0) {\n            //NEEDS TESTING!!!!!!!\n            const payload = {\n              ID: item._id\n            };\n            const response = await axios.post('/api/edit-bucket', payload);\n\n            if ((await response.status) != 200) {\n              console.log('error editing this item idk');\n              return;\n            }\n\n            console.log('list item completed success');\n          } else {\n            const payload = {\n              ID: item._id\n            };\n            const response = await axios.post('/api/edit-todo', payload);\n\n            if ((await response.status) != 200) {\n              console.log('error editing this item idk');\n              return;\n            }\n\n            console.log('list item completed success');\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, item.completed ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faCheckSquare,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 27\n        }\n      }) : /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        style: \"white\",\n        icon: faCheckSquare,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        class: \"removeListItem\",\n        onClick: async e => {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTrash,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }\n      })));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nexport default ListContainer;","map":{"version":3,"sources":["/home/bryce/largeProjectVersions/current/Grp10LargeProject/frontend/src/components/Home/ListContainer.js"],"names":["React","axios","FontAwesomeIcon","faCheckSquare","faMoneyBill","faTrash","faYenSign","faSquare","ListContainer","props","listItemState","state","currentState","currentListItems","length","map","item","index","itemTitle","caption","e","payload","ID","_id","response","post","status","console","log","completed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckSquare, faMoneyBill, faTrash, faYenSign } from '@fortawesome/free-solid-svg-icons';\nimport { faSquare } from '@fortawesome/free-solid-svg-icons';\n\nfunction ListContainer(props) {\n\n    var listItemState = '';\n    if(props.state.currentState === 0){\n        listItemState = \"Bucket List\";\n    }\n    else{\n        listItemState = \"Todo List\";\n    }\n    if(props.state.currentListItems.length > 0){\n        return(\n            props.state.currentListItems.map((item, index) => {\n                return(\n                    <div class=\"list-item\">\n                    <div class=\"type\">\n                      {listItemState}\n                    </div>\n                    <div class=\"listTitle\">\n                      {item.itemTitle}\n                    </div>\n                    <div class=\"listBody\">\n                      {item.caption}\n                    </div>\n                    <div class=\"complete\" onClick={\n                        async (e) => {\n                            if(props.state.currentState == 0){//NEEDS TESTING!!!!!!!\n                                const payload = {ID:item._id};\n                                const response = await axios.post('/api/edit-bucket',payload);\n                                if(await response.status != 200){\n                                    console.log('error editing this item idk');\n                                    return;\n                                }\n                                console.log('list item completed success');\n                            }else{\n                                const payload = {ID:item._id};\n                                const response = await axios.post('/api/edit-todo',payload);\n                                if(await response.status != 200){\n                                    console.log('error editing this item idk');\n                                    return;\n                                }\n                                console.log('list item completed success');\n                            }\n                        }\n                    }>{\n                        item.completed\n                        ? <FontAwesomeIcon icon={faCheckSquare}/>\n                        : <FontAwesomeIcon style=\"white\" icon={faCheckSquare}/>\n                    }</div>\n                    <div class=\"removeListItem\" onClick={\n                        async (e) => {\n\n                        }\n                    }><FontAwesomeIcon icon={faTrash}/></div>\n                    </div>\n                )\n            })\n        )\n    }\nreturn(\n    <>\n    </>\n)\n}\n\nexport default ListContainer"]},"metadata":{},"sourceType":"module"}