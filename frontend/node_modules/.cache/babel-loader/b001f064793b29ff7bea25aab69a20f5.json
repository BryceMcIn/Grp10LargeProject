{"ast":null,"code":"var _jsxFileName = \"/home/monky/Grp10LargeProject/Grp10LargeProject/frontend/src/components/RecoverPassword.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ACCESS_TOKEN_NAME } from \"../constants/apiConstants.js\";\nimport \"./Email.css\";\n\nfunction RecoverPassword(props) {\n  // local details\n  const [state, setState] = useState({\n    token: \"\",\n    password: \"\",\n    retypedPassword: \"\",\n    successMessage: null\n  });\n\n  const handleChange = e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setState(prevState => ({ ...prevState,\n      [id]: value\n    }));\n  };\n\n  const handleSubmitClick = () => {\n    const payload = {\n      token: state.token,\n      password: state.password\n    };\n\n    if (state.password != state.retypedPassword) {\n      setState(prevState => ({ ...prevState,\n        successMessage: \"Passwords do not match!\"\n      }));\n      return;\n    }\n\n    axios.post(\"https://letsbuckit.herokuapp.com/api/password-reset\", payload).then(function (response) {\n      if (response.status === 200) {\n        redirectToLogin();\n        props.showError(null);\n      } else if (response.code === 204) {\n        setState(prevState => ({ ...prevState,\n          successMessage: \"Invalid Token.\"\n        }));\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"registerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"registerTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    class: \"formItem\",\n    id: \"token\",\n    type: \"text\",\n    placeholder: \"Email Token\",\n    value: state.emailToken,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    class: \"formItem\",\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"New Password\",\n    value: state.emailToken,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    class: \"formItem\",\n    id: \"retypedPassword\",\n    type: \"password\",\n    placeholder: \"Retype New Password\",\n    value: state.emailToken,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    class: \"btn registerButton\",\n    value: state.emailToken,\n    onClick: () => handleSubmitClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 1\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"links\",\n    value: state.successMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 1\n    }\n  }));\n}\n\nexport default RecoverPassword;","map":{"version":3,"sources":["/home/monky/Grp10LargeProject/Grp10LargeProject/frontend/src/components/RecoverPassword.js"],"names":["React","useEffect","useState","axios","ACCESS_TOKEN_NAME","RecoverPassword","props","state","setState","token","password","retypedPassword","successMessage","handleChange","e","id","value","target","prevState","handleSubmitClick","payload","post","then","response","status","redirectToLogin","showError","code","catch","error","console","log","emailToken"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AAEA,OAAO,aAAP;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AACjCO,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,QAAQ,EAAE,EAFuB;AAGjCC,IAAAA,eAAe,EAAE,EAHgB;AAIjCC,IAAAA,cAAc,EAAE;AAJiB,GAAD,CAAlC;;AAOA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAgBF,CAAC,CAACG,MAAxB;AACAT,IAAAA,QAAQ,CAAEU,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvB,OAACH,EAAD,GAAMC;AAFiB,KAAhB,CAAD,CAAR;AAID,GAND;;AAQA,QAAMG,iBAAiB,GAAG,MAAM;AAC9B,UAAMC,OAAO,GAAG;AACdX,MAAAA,KAAK,EAACF,KAAK,CAACE,KADE;AAEdC,MAAAA,QAAQ,EAACH,KAAK,CAACG;AAFD,KAAhB;;AAKA,QAAGH,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACI,eAA3B,EAA2C;AACzCH,MAAAA,QAAQ,CAAEU,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBN,QAAAA,cAAc,EAAE;AAFO,OAAhB,CAAD,CAAR;AAIA;AACD;;AACDT,IAAAA,KAAK,CACFkB,IADH,CACQ,qDADR,EAC+DD,OAD/D,EAEGE,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,QAAAA,eAAe;AACfnB,QAAAA,KAAK,CAACoB,SAAN,CAAgB,IAAhB;AACD,OAHD,MAGO,IAAIH,QAAQ,CAACI,IAAT,KAAkB,GAAtB,EAA2B;AAChCnB,QAAAA,QAAQ,CAAEU,SAAD,KAAgB,EACvB,GAAGA,SADoB;AAEvBN,UAAAA,cAAc,EAAE;AAFO,SAAhB,CAAD,CAAR;AAID;AACF,KAZH,EAaGgB,KAbH,CAaS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAfH;AAgBD,GA7BD;;AA+BA,sBACE;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADE,eAEF;AAAO,IAAA,KAAK,EAAC,UAAb;AAAwB,IAAA,EAAE,EAAC,OAA3B;AAAmC,IAAA,IAAI,EAAC,MAAxC;AAA+C,IAAA,WAAW,EAAC,aAA3D;AAAyE,IAAA,KAAK,EAAEtB,KAAK,CAACyB,UAAtF;AAAkG,IAAA,QAAQ,EAAEnB,YAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFE,eAGJ;AAAO,IAAA,KAAK,EAAC,UAAb;AAAwB,IAAA,EAAE,EAAC,UAA3B;AAAsC,IAAA,IAAI,EAAC,UAA3C;AAAsD,IAAA,WAAW,EAAC,cAAlE;AAAiF,IAAA,KAAK,EAAEN,KAAK,CAACyB,UAA9F;AAA0G,IAAA,QAAQ,EAAEnB,YAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHI,eAIJ;AAAO,IAAA,KAAK,EAAC,UAAb;AAAwB,IAAA,EAAE,EAAC,iBAA3B;AAA6C,IAAA,IAAI,EAAC,UAAlD;AAA6D,IAAA,WAAW,EAAC,qBAAzE;AAA+F,IAAA,KAAK,EAAEN,KAAK,CAACyB,UAA5G;AAAwH,IAAA,QAAQ,EAAEnB,YAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJI,eAKJ;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAC,oBAA5B;AAAiD,IAAA,KAAK,EAAEN,KAAK,CAACyB,UAA9D;AAA0E,IAAA,OAAO,EAAG,MAAKb,iBAAiB,EAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALI,eAMJ;AAAK,IAAA,KAAK,EAAC,OAAX;AAAmB,IAAA,KAAK,EAAEZ,KAAK,CAACK,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANI,CADF;AAUD;;AAED,eAAeP,eAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ACCESS_TOKEN_NAME } from \"../constants/apiConstants.js\";\n\nimport \"./Email.css\";\n\nfunction RecoverPassword(props) {\n  // local details\n  const [state, setState] = useState({\n    token: \"\",\n    password: \"\",\n    retypedPassword: \"\",\n    successMessage: null,\n  });\n\n  const handleChange = (e) => {\n    const { id, value } = e.target;\n    setState((prevState) => ({\n      ...prevState,\n      [id]: value,\n    }));\n  };\n\n  const handleSubmitClick = () => {\n    const payload = {\n      token:state.token,\n      password:state.password\n    };\n\n    if(state.password != state.retypedPassword){\n      setState((prevState) => ({\n        ...prevState,\n        successMessage: \"Passwords do not match!\",\n      }))\n      return;\n    }\n    axios\n      .post(\"https://letsbuckit.herokuapp.com/api/password-reset\", payload)\n      .then(function (response) {\n        if (response.status === 200) {\n          redirectToLogin();\n          props.showError(null);\n        } else if (response.code === 204) {\n          setState((prevState) => ({\n            ...prevState,\n            successMessage: \"Invalid Token.\",\n          }))\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div class=\"registerContainer\">\n  <div class=\"registerTitle\">Reset Password</div>\n  <input class=\"formItem\" id=\"token\" type=\"text\" placeholder=\"Email Token\" value={state.emailToken} onChange={handleChange}></input>\n<input class=\"formItem\" id=\"password\" type=\"password\" placeholder=\"New Password\" value={state.emailToken} onChange={handleChange}></input>\n<input class=\"formItem\" id=\"retypedPassword\" type=\"password\" placeholder=\"Retype New Password\" value={state.emailToken} onChange={handleChange}></input>\n<button type=\"button\" class=\"btn registerButton\" value={state.emailToken} onClick={ () =>handleSubmitClick()}>Reset Password</button>\n<div class=\"links\" value={state.successMessage}></div>\n</div>\n  );\n}\n\nexport default RecoverPassword;\n"]},"metadata":{},"sourceType":"module"}